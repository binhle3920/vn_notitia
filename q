[1mdiff --git a/assets/data/food.json b/assets/data/food.json[m
[1mnew file mode 100644[m
[1mindex 0000000..67bd858[m
[1m--- /dev/null[m
[1m+++ b/assets/data/food.json[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "foods": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Ph·ªü",[m
[32m+[m[32m            "ref": "C√¥ng cha c∆°m t·∫•m m·ª° h√†nh,\n Nghƒ©a m·∫π nh∆∞ Ph·ªü H√† th√†nh ThƒÉng Long",[m
[32m+[m[32m            "img": "HN_Pho.png",[m
[32m+[m[32m            "price": "1.000.000 VNƒê",[m
[32m+[m[32m            "fact": "Top 40 m√≥n ƒÉn nh·∫•t ƒë·ªãnh ph·∫£i th·ª≠ tr√™n th·∫ø gi·ªõi"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "B√∫n ch·∫£",[m
[32m+[m[32m            "ref": "... C√≥ m·ªôt √¥ng ƒë·ªì cu·ªìng ch·ªØ ·ªü nh√† qu√™, m·ªôt h√¥m khƒÉn g√≥i l√™n \n H√† N·ªôi ƒë√£ ·ª©ng kh·∫©u ƒë·ªçc hai c√¢u th∆° khi ng·ª≠i th·∫•y m√πi kh√≥ ch·∫£: \n\n Ng√†n nƒÉm b·ª≠u v·∫≠t ƒë·∫•t ThƒÉng Long.\n B√∫n ch·∫£ l√† ƒë√¢y c√≥ ph·∫£i kh√¥ng?...",[m
[32m+[m[32m            "img": "HN_BunCha.png",[m
[32m+[m[32m            "price": "100.000 VNƒê",[m
[32m+[m[32m            "fact": "Trong chuy·∫øn thƒÉm Vi·ªát Nam nƒÉm 2016, t·ªïng th·ªëng M·ªπ Barack Obama c√πng ƒë·∫ßu b·∫øp n·ªïi ti·∫øng Anthony Bourdain ƒë√£ t·ªõi qu√°n b√∫n ch·∫£ tr√™n ph·ªë L√™ VƒÉn H∆∞u ƒë·ªÉ th∆∞·ªüng th·ª©c m√≥n ƒÉn truy·ªÅn th·ªëng n√†y c·ªßa Vi·ªát Nam"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "B√°nh cu·ªën",[m
[32m+[m[32m            "ref": "Thanh Tr√¨ c√≥ b√°nh cu·ªën ngon \n C√≥ g√≤ ng≈© Nh·∫°c, c√≥ con s√¥ng H·ªìng",[m
[32m+[m[32m            "img": "HN_BanhCuon.png",[m
[32m+[m[32m            "price": "50.000 VNƒê",[m
[32m+[m[32m            "fact": "B√°nh cu·ªën Vi·ªát Nam: N√©t tinh t·∫ø ·∫©m th·ª±c ƒë∆∞·ª£c khen ng·ª£i n·ª©c n·ªü tr√™n b√°o M·ªπ The New York Times"[m
[32m+[m[32m        }[m
[32m+[m[32m    ][m
[32m+[m[32m}[m
[1mdiff --git a/assets/data/history.json b/assets/data/history.json[m
[1mnew file mode 100644[m
[1mindex 0000000..9948368[m
[1m--- /dev/null[m
[1m+++ b/assets/data/history.json[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "history_videos": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "avatar": "VietSuToanThu.png",[m
[32m+[m[32m            "user": "Vi·ªát S·ª≠ To√†n Th∆∞",[m
[32m+[m[32m            "link": "https://www.youtube.com/watch?v=IDuonMFmlc4",[m
[32m+[m[32m            "title": "T√™n H√Ä N·ªòI ƒê∆∞·ª£c B·∫Øt Ngu·ªìn T·ª´ ƒê√¢u?"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "avatar": "VietSuToanThu.png",[m
[32m+[m[32m            "user": "Vi·ªát S·ª≠ To√†n Th∆∞",[m
[32m+[m[32m            "link": "https://www.youtube.com/watch?v=DPbjBYGLk3s",[m
[32m+[m[32m            "title": "Gi·∫£i M√£ Nh·ªØng B√≠ ·∫®n Ch∆∞a C√≥ L·ªùi Gi·∫£i V·ªÅ H·ªí G∆Ø∆†M"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "avatar": "VietSuToanThu.png",[m
[32m+[m[32m            "user": "Vi·ªát S·ª≠ To√†n Th∆∞",[m
[32m+[m[32m            "link": "https://www.youtube.com/watch?v=x4rBFk1ZSxk",[m
[32m+[m[32m            "title": "L√Ω Gi·∫£i T√™n G·ªçi ƒê·∫ßy B√≠ ·∫®n C·ªßa 36 PH·ªê PH∆Ø·ªúNG H√Ä N·ªòI"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "avatar": "VietSuToanThu.png",[m
[32m+[m[32m            "user": "Vi·ªát S·ª≠ To√†n Th∆∞",[m
[32m+[m[32m            "link": "https://www.youtube.com/watch?v=OWQhsd7Lucs",[m
[32m+[m[32m            "title": "L√Ω do t·∫°i sao H√Ä N·ªòI ƒë∆∞·ª£c ch·ªçn l√†m TH·ª¶ ƒê√î khi·∫øn c·∫£ th·∫ø gi·ªõi S·ª¢ T√ÅI M·∫∂T"[m
[32m+[m[32m        }[m
[32m+[m[32m    ][m
[32m+[m[32m}[m
[1mdiff --git a/assets/images/HN_BanhCuon.png b/assets/images/HN_BanhCuon.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c9e6b91[m
Binary files /dev/null and b/assets/images/HN_BanhCuon.png differ
[1mdiff --git a/assets/images/HN_BunCha.png b/assets/images/HN_BunCha.png[m
[1mnew file mode 100644[m
[1mindex 0000000..445cd4a[m
Binary files /dev/null and b/assets/images/HN_BunCha.png differ
[1mdiff --git a/assets/images/HN_Pho.png b/assets/images/HN_Pho.png[m
[1mnew file mode 100644[m
[1mindex 0000000..43fa58a[m
Binary files /dev/null and b/assets/images/HN_Pho.png differ
[1mdiff --git a/assets/images/VietSuToanThu.png b/assets/images/VietSuToanThu.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c430778[m
Binary files /dev/null and b/assets/images/VietSuToanThu.png differ
[1mdiff --git a/assets/images/arrow.png b/assets/images/arrow.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d3db3da[m
Binary files /dev/null and b/assets/images/arrow.png differ
[1mdiff --git a/lib/logic/models/FoodInfo.dart b/lib/logic/models/FoodInfo.dart[m
[1mindex 41d1dfd..92fdf10 100644[m
[1m--- a/lib/logic/models/FoodInfo.dart[m
[1m+++ b/lib/logic/models/FoodInfo.dart[m
[36m@@ -3,20 +3,23 @@[m [mclass FoodInfo {[m
   final String foodRef;[m
   final String foodImg;[m
   final String foodPrice;[m
[32m+[m[32m  final String foodFact;[m
 [m
[31m-  FoodInfo(this.foodName, this.foodRef, this.foodImg, this.foodPrice);[m
[32m+[m[32m  FoodInfo([m
[32m+[m[32m      this.foodName, this.foodRef, this.foodImg, this.foodPrice, this.foodFact);[m
 [m
   factory FoodInfo.fromJson(dynamic json) {[m
     return FoodInfo([m
       json['name'] as String,[m
[31m-      json['info'] as String,[m
[32m+[m[32m      json['ref'] as String,[m
       json['img'] as String,[m
       json['price'] as String,[m
[32m+[m[32m      json['fact'] as String,[m
     );[m
   }[m
 [m
   @override[m
   String toString() {[m
[31m-    return '{ ${this.foodName}, ${this.foodRef}, ${this.foodImg}, ${this.foodPrice} }';[m
[32m+[m[32m    return '{ ${this.foodName}, ${this.foodRef}, ${this.foodImg}, ${this.foodPrice}, ${this.foodFact} }';[m
   }[m
 }[m
[1mdiff --git a/lib/logic/models/Information.dart b/lib/logic/models/Information.dart[m
[1mindex 5c6536e..681f1ae 100644[m
[1m--- a/lib/logic/models/Information.dart[m
[1m+++ b/lib/logic/models/Information.dart[m
[36m@@ -1,5 +1,6 @@[m
[31m-import 'package:firebase_database/firebase_database.dart';[m
[32m+[m[32mimport 'dart:developer';[m
 [m
[32m+[m[32mimport 'package:firebase_database/firebase_database.dart';[m
 class Information {[m
   String cityName;[m
   String square;[m
[36m@@ -9,14 +10,13 @@[m [mclass Information {[m
   String lp;[m
   String img;[m
 [m
[31m-  Information(this.cityName, this.square, this.population, this.sentence1,[m
[31m-      this.sentence2, this.lp, this.img);[m
[32m+[m[32m  Information(this.cityName, this.square, this.population,this.sentence1, this.sentence2, this.lp, this.img);[m
 [m
[31m-  factory Information.fromDb(DataSnapshot data) {[m
[32m+[m[32m  factory Information.fromDb(DataSnapshot data)[m
[32m+[m[32m  {[m
     var da = data.value;[m
 [m
[31m-    return Information(da['PROVINCE'], da['AREA'], da['POPULATION'],[m
[31m-        da['CDTN1'], da['CDTN2'], da['LP'], da['IMG']);[m
[32m+[m[32m    return Information(da['PROVINCE'], da['AREA'], da['POPULATION'], da['CDTN1'], da['CDTN2'], da['LP'], da['IMG']);[m
   }[m
 [m
   @override[m
[1mdiff --git a/lib/view/screens/city.dart b/lib/view/screens/city.dart[m
[1mindex 1a211d7..417d3a4 100644[m
[1m--- a/lib/view/screens/city.dart[m
[1m+++ b/lib/view/screens/city.dart[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport 'dart:developer';[m
[32m+[m
 import 'package:flutter/material.dart';[m
 import 'package:flutter/widgets.dart';[m
 import 'package:google_fonts/google_fonts.dart';[m
[36m@@ -12,8 +14,7 @@[m [mclass ChooseCityScreen extends StatefulWidget {[m
   _ChooseCityScreenState createState() => _ChooseCityScreenState();[m
 }[m
 [m
[31m-class _ChooseCityScreenState extends State<ChooseCityScreen>[m
[31m-    with TickerProviderStateMixin {[m
[32m+[m[32mclass _ChooseCityScreenState extends State<ChooseCityScreen> with TickerProviderStateMixin{[m
   static String _dropDownValue = "Th√†nh ph·ªë";[m
   List<String> _dropDownList = [];[m
   List<CityCordinate> _listCity = [];[m
[36m@@ -22,8 +23,7 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
   int curCity;[m
 [m
   Future<void> readJson() async {[m
[31m-    final String response = await DefaultAssetBundle.of(context)[m
[31m-        .loadString('assets/data/city_cor.json');[m
[32m+[m[32m    final String response = await DefaultAssetBundle.of(context).loadString('assets/data/city_cor.json');[m
     final data = await json.decode(response);[m
 [m
     List _temp = data["cities"];[m
[36m@@ -31,8 +31,9 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
       //save list city to CityCordinate object[m
       _listCity.add(CityCordinate.fromJson(_temp[i]));[m
 [m
[32m+[m
     setState(() {[m
[31m-      for (int i = 0; i < _listCity.length; i++)[m
[32m+[m[32m      for (int i=0; i<_listCity.length; i++)[m
         _dropDownList.add(_listCity[i].city);[m
 [m
       curCity = 0;[m
[36m@@ -62,21 +63,23 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
           mainAxisAlignment: MainAxisAlignment.center,[m
           children: <Widget>[[m
             _dropdownButton(),[m
[31m-            Stack(children: <Widget>[[m
[31m-              Padding([m
[31m-                padding: EdgeInsets.only(top: 40, bottom: 40),[m
[31m-                child: Image.asset('assets/images/map.png',[m
[31m-                    width: 221, height: 465),[m
[31m-              ),[m
[31m-              Positioned([m
[31m-                  top: flagTopPos,[m
[31m-                  left: flagLeftPos,[m
[31m-                  child: Image.asset([m
[31m-                    'assets/images/flag.png',[m
[31m-                    width: 30,[m
[31m-                    height: 30,[m
[31m-                  ))[m
[31m-            ]),[m
[32m+[m
[32m+[m[32m            Stack([m
[32m+[m[32m              children: <Widget>[[m
[32m+[m[32m                Padding([m
[32m+[m[32m                  padding: EdgeInsets.only(top: 40, bottom: 40),[m
[32m+[m[32m                  child:[m
[32m+[m[32m                      Image.asset('assets/images/map.png', width: 221, height: 465),[m
[32m+[m[32m                ),[m
[32m+[m
[32m+[m[32m                Positioned([m
[32m+[m[32m                    top: flagTopPos,[m
[32m+[m[32m                    left: flagLeftPos,[m
[32m+[m[32m                    child: Image.asset('assets/images/flag.png', width: 30, height: 30,)[m
[32m+[m[32m                )[m
[32m+[m[32m              ][m
[32m+[m[32m            ),[m
[32m+[m
             _nextButton()[m
           ],[m
         ),[m
[36m@@ -92,13 +95,14 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
           iconSize: 50,[m
           iconEnabledColor: Color.fromRGBO(78, 205, 196, 1),[m
           isExpanded: false,[m
[31m-          hint: Text([m
[31m-            _dropDownValue,[m
[31m-            style: GoogleFonts.getFont('Roboto',[m
[31m-                textStyle: TextStyle([m
[31m-                  fontSize: 40,[m
[31m-                  color: Color.fromRGBO(78, 205, 196, 1),[m
[31m-                )),[m
[32m+[m[32m          hint: Text(_dropDownValue,[m
[32m+[m[32m            style: GoogleFonts.getFont([m
[32m+[m[32m              'Roboto',[m
[32m+[m[32m              textStyle: TextStyle([m
[32m+[m[32m                fontSize: 40,[m
[32m+[m[32m                color: Color.fromRGBO(78, 205, 196, 1),[m
[32m+[m[32m              )[m
[32m+[m[32m            ),[m
           ),[m
           items: _dropDownList.map((val) {[m
             return DropdownMenuItem(child: Text(val), value: val);[m
[36m@@ -106,7 +110,7 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
           onChanged: (val) {[m
             setState(() {[m
               _dropDownValue = val;[m
[31m-              for (int i = 0; i < _listCity.length; i++) {[m
[32m+[m[32m              for (int i=0; i<_listCity.length; i++) {[m
                 if (_listCity[i].city == val) {[m
                   flagTopPos = _listCity[i].top.toDouble();[m
                   flagLeftPos = _listCity[i].left.toDouble();[m
[36m@@ -134,11 +138,11 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
           if (curCity == null) {[m
             return;[m
           }[m
[31m-[m
[31m-          Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-              builder: (context) =>[m
[31m-                  MainScreen(city: _dropDownValue, cityIndex: curCity)));[m
[32m+[m[41m          [m
[32m+[m[32m          Navigator.of(context)[m
[32m+[m[32m              .pushReplacement(MaterialPageRoute(builder: (context) => MainScreen(city: _dropDownValue, cityIndex: curCity)));[m
         },[m
[32m+[m
         shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(100)),[m
         fillColor: Color.fromRGBO(78, 205, 196, 1),[m
         hoverColor: Color.fromRGBO(247, 255, 247, 1),[m
[36m@@ -152,4 +156,4 @@[m [mclass _ChooseCityScreenState extends State<ChooseCityScreen>[m
       ),[m
     );[m
   }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/lib/view/screens/covid.dart b/lib/view/screens/covid.dart[m
[1mindex e348402..343d10f 100644[m
[1m--- a/lib/view/screens/covid.dart[m
[1m+++ b/lib/view/screens/covid.dart[m
[36m@@ -10,23 +10,18 @@[m [mclass CovidScreen extends StatefulWidget {[m
   final String city;[m
   final int cityIndex;[m
 [m
[31m-  const CovidScreen({Key key, @required this.city, @required this.cityIndex})[m
[31m-      : super(key: key);[m
[32m+[m[32m  const CovidScreen({Key key, @required this.city, @required this.cityIndex }) : super(key: key);[m
   @override[m
   _CovidScreenState createState() => _CovidScreenState();[m
 }[m
 [m
[31m-class _CovidScreenState extends State<CovidScreen>[m
[31m-    with TickerProviderStateMixin {[m
[32m+[m[32mclass _CovidScreenState extends State<CovidScreen> with TickerProviderStateMixin {[m
   int inf, act, re, dead;[m
   AnimationController animationController;[m
 [m
   Future getJson() async {[m
     //URL to fetch data information[m
[31m-    final apiEndPoint =[m
[31m-        "https://data.opendevelopmentmekong.net/api/3/action/datastore_search?q=" +[m
[31m-            widget.city +[m
[31m-            "&resource_id=b15e8f4b-c905-48fb-973e-d412e2759f55";[m
[32m+[m[32m    final apiEndPoint = "https://data.opendevelopmentmekong.net/api/3/action/datastore_search?q=" + widget.city + "&resource_id=b15e8f4b-c905-48fb-973e-d412e2759f55";[m
     final apiResponse = await http.get(Uri.parse(apiEndPoint));[m
     //Instance of Response[m
     return json.decode(apiResponse.body);[m
[36m@@ -57,12 +52,13 @@[m [mclass _CovidScreenState extends State<CovidScreen>[m
     );[m
   }[m
 [m
[32m+[m
   @override[m
   Widget build(BuildContext context) {[m
[31m-    return FutureBuilder<String>([m
[32m+[m[32m    return FutureBuilder<String> ([m
         future: getCovidData(),[m
         builder: (BuildContext context, AsyncSnapshot snapshot) {[m
[31m-          if (snapshot.connectionState == ConnectionState.waiting) {[m
[32m+[m[32m          if( snapshot.connectionState == ConnectionState.waiting){[m
             animationController.forward();[m
             return buildWaitingScreen();[m
           } else {[m
[36m@@ -71,7 +67,8 @@[m [mclass _CovidScreenState extends State<CovidScreen>[m
             else[m
               return buildMainScreen();[m
           }[m
[31m-        });[m
[32m+[m[32m        }[m
[32m+[m[32m    );[m
   }[m
 [m
   Widget buildMainScreen() {[m
[36m@@ -81,40 +78,40 @@[m [mclass _CovidScreenState extends State<CovidScreen>[m
         title: Text(widget.city),[m
         centerTitle: true,[m
       ),[m
[31m-      bottomNavigationBar:[m
[31m-          BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[31m-      body: Container([m
[31m-        margin: EdgeInsets.only(bottom: 20),[m
[31m-        child: ListView([m
[31m-          children: <Widget>[[m
[31m-            Row([m
[31m-              mainAxisAlignment: MainAxisAlignment.center,[m
[31m-              children: [[m
[31m-                Container([m
[31m-                  padding: EdgeInsets.only(top: 20),[m
[32m+[m[32m      bottomNavigationBar: BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[32m+[m[32m      body: ListView([m
[32m+[m[32m        children: <Widget>[[m
[32m+[m[32m          Row([m
[32m+[m[32m            mainAxisAlignment: MainAxisAlignment.center,[m
[32m+[m[32m            children: [[m
[32m+[m[32m              Container([m
[32m+[m[32m                padding: EdgeInsets.only(top: 20),[m
[32m+[m[32m                child: Image.asset([m
[32m+[m[32m                  "assets/images/doodle.png",[m
[32m+[m[32m                  width: 65,[m
[32m+[m[32m                  height: 65,[m
[32m+[m[32m                ),[m
[32m+[m[32m              ),[m
[32m+[m[32m              Center([m
[32m+[m[32m                  child: Text([m
[32m+[m[32m                    "CORONA",[m
[32m+[m[32m                    style: TextStyle([m
[32m+[m[32m                        fontSize: 40,[m
[32m+[m[32m                        fontFamily: 'Roboto',[m
[32m+[m[32m                        color: new Color(0xFF1A535C)),[m
[32m+[m[32m                  )),[m
[32m+[m[32m              Container([m
                   child: Image.asset([m
[31m-                    "assets/images/doodle.png",[m
[32m+[m[32m                    "assets/images/plane.png",[m
                     width: 65,[m
                     height: 65,[m
[31m-                  ),[m
[31m-                ),[m
[31m-                Center([m
[31m-                    child: Text([m
[31m-                  "CORONA",[m
[31m-                  style: TextStyle([m
[31m-                      fontSize: 40,[m
[31m-                      fontFamily: 'Roboto',[m
[31m-                      color: new Color(0xFF1A535C)),[m
[31m-                )),[m
[31m-                Container([m
[31m-                    child: Image.asset([m
[31m-                  "assets/images/plane.png",[m
[31m-                  width: 65,[m
[31m-                  height: 65,[m
[31m-                )),[m
[31m-              ],[m
[31m-            ),[m
[31m-            Stack(fit: StackFit.loose, children: <Widget>[[m
[32m+[m[32m                  )),[m
[32m+[m[32m            ],[m
[32m+[m[32m          ),[m
[32m+[m
[32m+[m[32m          Stack([m
[32m+[m[32m            fit: StackFit.loose,[m
[32m+[m[32m            children: <Widget>[[m
               Container([m
                 alignment: Alignment.center,[m
                 padding: EdgeInsets.all(5),[m
[36m@@ -125,141 +122,157 @@[m [mclass _CovidScreenState extends State<CovidScreen>[m
                   fit: BoxFit.cover,[m
                 ),[m
               ),[m
[31m-              Column(children: [[m
[31m-                Row([m
[31m-                  children: [[m
[31m-                    Column([m
[31m-                      children: [[m
[31m-                        Padding([m
[31m-                            padding: EdgeInsets.only(left: 30, top: 90),[m
[31m-                            child: Text([m
[31m-                              'S·ªë ca nhi·ªÖm',[m
[31m-                              style: TextStyle([m
[31m-                                  color: Color(0xff1A535C), fontSize: 18.0),[m
[31m-                            )),[m
[31m-                        Text([m
[31m-                          inf.toString(),[m
[31m-                          style: TextStyle([m
[31m-                              color: Color(0xffFF6B6B), fontSize: 36.0),[m
[31m-                        )[m
[31m-                      ],[m
[31m-                    ),[m
[31m-                    Column([m
[31m-                      children: [[m
[31m-                        Padding([m
[31m-                            padding: EdgeInsets.only(left: 30, top: 90),[m
[31m-                            child: Text([m
[31m-                              'T·ª≠ vong',[m
[31m-                              style: TextStyle([m
[31m-                                  color: Color(0xff1A535C), fontSize: 18.0),[m
[31m-                            )),[m
[31m-                        Text([m
[31m-                          dead.toString(),[m
[31m-                          style: TextStyle([m
[31m-                              color: Color(0xffFF6B6B), fontSize: 36.0),[m
[31m-                        )[m
[31m-                      ],[m
[31m-                    ),[m
[31m-                  ],[m
[31m-                ),[m
[31m-                Row([m
[31m-                  children: [[m
[31m-                    Column([m
[31m-                      children: [[m
[31m-                        Padding([m
[31m-                            padding: EdgeInsets.only(left: 30, top: 10),[m
[31m-                            child: Text([m
[31m-                              'ƒêang ƒëi·ªÅu tr·ªã',[m
[31m-                              style: TextStyle([m
[31m-                                  color: Color(0xff1A535C), fontSize: 18.0),[m
[31m-                            )),[m
[31m-                        Text([m
[31m-                          act.toString(),[m
[31m-                          style: TextStyle([m
[31m-                              color: Color(0xffFF6B6B), fontSize: 36.0),[m
[31m-                        )[m
[31m-                      ],[m
[31m-                    ),[m
[31m-                    Column([m
[31m-                      children: [[m
[31m-                        Padding([m
[31m-                            padding: EdgeInsets.only(left: 30, top: 10),[m
[31m-                            child: Text([m
[31m-                              'ƒê√£ h·ªìi ph·ª•c',[m
[31m-                              style: TextStyle([m
[31m-                                  color: Color(0xff1A535C), fontSize: 18.0),[m
[31m-                            )),[m
[31m-                        Text([m
[31m-                          re.toString(),[m
[31m-                          style: TextStyle([m
[31m-                              color: Color(0xffFF6B6B), fontSize: 36.0),[m
[31m-                        )[m
[31m-                      ],[m
[31m-                    ),[m
[31m-                  ],[m
[31m-                ),[m
[31m-              ]),[m
[31m-            ]),[m
[31m-            Divider([m
[31m-              thickness: 1,[m
[31m-              color: Color(0xff4ECDC4),[m
[31m-              indent: 75.0,[m
[31m-              endIndent: 75.0,[m
[31m-            ),[m
[31m-            Container([m
[31m-                child: Stack([m
[31m-              children: <Widget>[[m
[31m-                Column([m
[31m-                  crossAxisAlignment: CrossAxisAlignment.center,[m
[31m-                  children: [[m
[31m-                    Flexible([m
[31m-                      flex: 0,[m
[31m-                      child: Container([m
[31m-                        padding: EdgeInsets.all(5),[m
[31m-                        child: Image.asset([m
[31m-                          "assets/images/rectange_covid.png",[m
[31m-                          height: 500,[m
[31m-                          width: double.infinity,[m
[31m-                          // fit: BoxFit.cover,[m
[32m+[m
[32m+[m[32m              Column([m
[32m+[m[32m                children: [[m
[32m+[m[32m                  Row([m
[32m+[m[32m                    children: [[m
[32m+[m[32m                      Column([m
[32m+[m[32m                        children: [[m
[32m+[m[32m                          Padding([m
[32m+[m[32m                              padding: EdgeInsets.only(left: 30, top: 90),[m
[32m+[m[32m                              child: Text([m
[32m+[m[32m                                'S·ªë ca nhi·ªÖm',[m
[32m+[m[32m                                style: TextStyle([m
[32m+[m[32m                                    color: Color(0xff1A535C), fontSize: 18.0),[m
[32m+[m[32m                              )[m
[32m+[m[32m                          ),[m
[32m+[m
[32m+[m[32m                          Text([m
[32m+[m[32m                            inf.toString(),[m
[32m+[m[32m                            style: TextStyle([m
[32m+[m[32m                                color: Color(0xffFF6B6B), fontSize: 36.0),[m
[32m+[m[32m                          )[m
[32m+[m[32m                        ],[m
[32m+[m[32m                      ),[m
[32m+[m
[32m+[m[32m                      Column([m
[32m+[m[32m                        children: [[m
[32m+[m[32m                          Padding([m
[32m+[m[32m                              padding: EdgeInsets.only(left: 30, top: 90),[m
[32m+[m[32m                              child: Text([m
[32m+[m[32m                                'T·ª≠ vong',[m
[32m+[m[32m                                style: TextStyle([m
[32m+[m[32m                                    color: Color(0xff1A535C), fontSize: 18.0),[m
[32m+[m[32m                              )[m
[32m+[m[32m                          ),[m
[32m+[m
[32m+[m[32m                          Text([m
[32m+[m[32m                            dead.toString(),[m
[32m+[m[32m                            style: TextStyle([m
[32m+[m[32m                                color: Color(0xffFF6B6B), fontSize: 36.0),[m
[32m+[m[32m                          )[m
[32m+[m
[32m+[m[32m                        ],[m
[32m+[m[32m                      ),[m
[32m+[m[32m                    ],[m
[32m+[m[32m                  ),[m
[32m+[m[32m                  Row([m
[32m+[m[32m                    children: [[m
[32m+[m[32m                      Column([m
[32m+[m[32m                        children: [[m
[32m+[m[32m                          Padding([m
[32m+[m[32m                              padding: EdgeInsets.only(left: 30, top: 10),[m
[32m+[m[32m                              child: Text([m
[32m+[m[32m                                'ƒêang ƒëi·ªÅu tr·ªã',[m
[32m+[m[32m                                style: TextStyle([m
[32m+[m[32m                                    color: Color(0xff1A535C), fontSize: 18.0),[m
[32m+[m[32m                              )[m
[32m+[m[32m                          ),[m
[32m+[m
[32m+[m[32m                          Text([m
[32m+[m[32m                            act.toString(),[m
[32m+[m[32m                            style: TextStyle([m
[32m+[m[32m                                color: Color(0xffFF6B6B), fontSize: 36.0),[m
[32m+[m[32m                          )[m
[32m+[m
[32m+[m[32m                        ],[m
[32m+[m[32m                      ),[m
[32m+[m
[32m+[m[32m                      Column([m
[32m+[m[32m                        children: [[m
[32m+[m[32m                          Padding([m
[32m+[m[32m                              padding: EdgeInsets.only(left: 30, top: 10),[m
[32m+[m[32m                              child: Text([m
[32m+[m[32m                                'ƒê√£ h·ªìi ph·ª•c',[m
[32m+[m[32m                                style: TextStyle([m
[32m+[m[32m                                    color: Color(0xff1A535C), fontSize: 18.0),[m
[32m+[m[32m                              )[m
[32m+[m[32m                          ),[m
[32m+[m
[32m+[m[32m                          Text([m
[32m+[m[32m                            re.toString(),[m
[32m+[m[32m                            style: TextStyle([m
[32m+[m[32m                                color: Color(0xffFF6B6B), fontSize: 36.0),[m
[32m+[m[32m                          )[m
[32m+[m[32m                        ],[m
[32m+[m[32m                      ),[m
[32m+[m[32m                    ],[m
[32m+[m[32m                  ),[m
[32m+[m[32m                ][m
[32m+[m[32m              ),[m
[32m+[m[32m            ][m
[32m+[m[32m          ),[m
[32m+[m
[32m+[m[32m          Divider([m
[32m+[m[32m            thickness: 1,[m
[32m+[m[32m            color: Color(0xff4ECDC4),[m
[32m+[m[32m            indent: 75.0,[m
[32m+[m[32m            endIndent: 75.0,[m
[32m+[m[32m          ),[m
[32m+[m
[32m+[m[32m          Container([m
[32m+[m[32m              child: Stack([m
[32m+[m[32m                children: <Widget>[[m
[32m+[m[32m                  Column([m
[32m+[m[32m                    crossAxisAlignment: CrossAxisAlignment.center,[m
[32m+[m[32m                    children: [[m
[32m+[m[32m                      Flexible([m
[32m+[m[32m                        flex: 0,[m
[32m+[m[32m                        child: Container([m
[32m+[m[32m                          padding: EdgeInsets.all(5),[m
[32m+[m[32m                          child: Image.asset([m
[32m+[m[32m                            "assets/images/rectange_covid.png",[m
[32m+[m[32m                            height: 500,[m
[32m+[m[32m                            width: double.infinity,[m
[32m+[m[32m                            // fit: BoxFit.cover,[m
[32m+[m[32m                          ),[m
[32m+[m[32m                        ),[m
[32m+[m[32m                      ),[m
[32m+[m[32m                      Flexible([m
[32m+[m[32m                        flex: 0,[m
[32m+[m[32m                        child: Text([m
[32m+[m[32m                          "B·∫°n c√≥ th·ªÉ khai b√°o y t·∫ø t·∫°i ƒë√¢y",[m
[32m+[m[32m                          textAlign: TextAlign.center,[m
[32m+[m[32m                          style:[m
[32m+[m[32m                          TextStyle(fontSize: 18.0, color: Color(0xffFF0303)),[m
                         ),[m
                       ),[m
[31m-                    ),[m
[31m-                    Flexible([m
[31m-                      flex: 0,[m
[31m-                      child: Text([m
[31m-                        "B·∫°n c√≥ th·ªÉ khai b√°o y t·∫ø t·∫°i ƒë√¢y",[m
[31m-                        textAlign: TextAlign.center,[m
[31m-                        style:[m
[31m-                            TextStyle(fontSize: 18.0, color: Color(0xffFF0303)),[m
[32m+[m[32m                      Flexible([m
[32m+[m[32m                        flex: 0,[m
[32m+[m[32m                        child: IconButton([m
[32m+[m[32m                            onPressed: () async {[m
[32m+[m[32m                              const url = 'https://tokhaiyte.vn/';[m
[32m+[m[32m                              if (await canLaunch(url)) {[m
[32m+[m[32m                                await launch(url);[m
[32m+[m[32m                              } else {[m
[32m+[m[32m                                throw 'Could not launch $url';[m
[32m+[m[32m                              }[m
[32m+[m[32m                            },[m
[32m+[m[32m                            icon: Image.asset('assets/images/khaibao.png'),[m
[32m+[m[32m                            iconSize: 50,[m
[32m+[m[32m                            splashRadius: 30,[m
[32m+[m[32m                            splashColor: Color(0xff4ECDC4),[m
[32m+[m[32m                            highlightColor: Colors.white),[m
                       ),[m
[31m-                    ),[m
[31m-                    Flexible([m
[31m-                      flex: 0,[m
[31m-                      child: IconButton([m
[31m-                          onPressed: () async {[m
[31m-                            const url = 'https://tokhaiyte.vn/';[m
[31m-                            if (await canLaunch(url)) {[m
[31m-                              await launch(url);[m
[31m-                            } else {[m
[31m-                              throw 'Could not launch $url';[m
[31m-                            }[m
[31m-                          },[m
[31m-                          icon: Image.asset('assets/images/khaibao.png'),[m
[31m-                          iconSize: 50,[m
[31m-                          splashRadius: 30,[m
[31m-                          splashColor: Color(0xff4ECDC4),[m
[31m-                          highlightColor: Colors.white),[m
[31m-                    ),[m
[31m-                  ],[m
[31m-                ),[m
[31m-              ],[m
[31m-            )),[m
[31m-          ],[m
[31m-        ),[m
[32m+[m[32m                    ],[m
[32m+[m[32m                  ),[m
[32m+[m[32m                ],[m
[32m+[m[32m              )),[m
[32m+[m[32m        ],[m
       ),[m
     );[m
   }[m
[31m-[m
   Widget buildWaitingScreen() {[m
     return Scaffold([m
       backgroundColor: Color.fromRGBO(247, 255, 247, 1),[m
[1mdiff --git a/lib/view/screens/cuisine.dart b/lib/view/screens/cuisine.dart[m
[1mindex f15f6ea..5878336 100644[m
[1m--- a/lib/view/screens/cuisine.dart[m
[1m+++ b/lib/view/screens/cuisine.dart[m
[36m@@ -1,95 +1,66 @@[m
 import 'package:flutter/material.dart';[m
 import 'package:flutter/services.dart';[m
 import 'package:flutter_swiper/flutter_swiper.dart';[m
[31m-import 'package:vn_notitia/view/screens/city.dart';[m
 import '../../logic/models/FoodInfo.dart';[m
 import 'package:vn_notitia/view/utils/navigation_bar.dart';[m
[31m-import 'package:firebase_database/firebase_database.dart';[m
[31m-import 'package:auto_size_text/auto_size_text.dart';[m
[32m+[m[32mimport 'dart:convert';[m
 [m
 class FoodScreen extends StatefulWidget {[m
   final String city;[m
   final int cityIndex;[m
 [m
[31m-  const FoodScreen({Key key, @required this.city, @required this.cityIndex})[m
[31m-      : super(key: key);[m
[32m+[m[32m  const FoodScreen({Key key, @required this.city, @required this.cityIndex }) : super(key: key);[m
 [m
   @override[m
   _FoodScreen createState() => _FoodScreen();[m
 }[m
 [m
 class _FoodScreen extends State<FoodScreen> {[m
[32m+[m[32m  final String _city = 'H√† N·ªôi';[m
   String _text;[m
[32m+[m
[32m+[m[32m  List _temp = [];[m
   List<FoodInfo> _foods = [];[m
[31m-  Future<String> _data;[m
[32m+[m[32m  Future<void> readJson() async {[m
[32m+[m[32m    final String response =[m
[32m+[m[32m        await rootBundle.loadString('assets/data/food.json');[m
[32m+[m[32m    final data = await json.decode(response);[m
[32m+[m[32m    setState(() {[m
[32m+[m[32m      _temp = data["foods"];[m
[32m+[m[32m      for (int i = 0; i < _temp.length; i++)[m
[32m+[m[32m        _foods.add(FoodInfo.fromJson(_temp[i]));[m
[32m+[m
[32m+[m[32m      _text = _foods[0].foodRef; // init first food[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
 [m
   @override[m
   void initState() {[m
     super.initState();[m
[31m-    _data = loadData();[m
[32m+[m[32m    readJson();[m
   }[m
 [m
   @override[m
   Widget build(BuildContext context) {[m
     SystemChrome.setEnabledSystemUIOverlays([]);[m
[31m-    return FutureBuilder<String>([m
[31m-        future: _data,[m
[31m-        builder: (BuildContext context, AsyncSnapshot snapshot) {[m
[31m-          switch (snapshot.connectionState) {[m
[31m-            case ConnectionState.waiting:[m
[31m-              return Center(child: CircularProgressIndicator());[m
[31m-            case ConnectionState.none:[m
[31m-              return Center(child: Text('Can not connect'));[m
[31m-            case ConnectionState.done:[m
[31m-              return buildFoodScreen();[m
[31m-            default:[m
[31m-              return null;[m
[31m-          }[m
[31m-        });[m
[31m-  }[m
[31m-[m
[31m-  Future<String> loadData() async {[m
[31m-    await FirebaseDatabase.instance[m
[31m-        .reference()[m
[31m-        .child('${widget.cityIndex}/Food')[m
[31m-        .once()[m
[31m-        .then((DataSnapshot snapshot) {[m
[31m-      if (snapshot.value == null) return;[m
[31m-      Map<String, dynamic> result =[m
[31m-          Map<String, dynamic>.from(snapshot.value as Map<dynamic, dynamic>);[m
[31m-      result.forEach((key, values) {[m
[31m-        _foods.add(FoodInfo.fromJson(values));[m
[31m-      });[m
[31m-      _text = _foods[0].foodRef; // init first food[m
[31m-    });[m
[31m-    return Future.value("Data load successfully");[m
[31m-  }[m
[31m-[m
[31m-  Widget buildFoodScreen() {[m
     return new Scaffold([m
       resizeToAvoidBottomInset: false,[m
       extendBodyBehindAppBar: true,[m
[31m-      bottomNavigationBar:[m
[31m-          BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[32m+[m[32m      bottomNavigationBar: BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
       appBar: AppBar([m
         centerTitle: true,[m
[31m-        title: Row([m
[31m-          mainAxisAlignment: MainAxisAlignment.center,[m
[31m-          children: [[m
[31m-            Container([m
[31m-              margin: EdgeInsets.only(left: 40),[m
[31m-              child: Text(widget.city),[m
[31m-            ),[m
[31m-            IconButton([m
[31m-              icon: Icon(Icons.arrow_drop_down),[m
[31m-              color: Colors.white,[m
[31m-              onPressed: () {[m
[31m-                Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-                    builder: (context) => ChooseCityScreen()));[m
[31m-              },[m
[31m-            ),[m
[31m-          ],[m
[31m-        ),[m
[32m+[m[32m        title: Text(widget.city),[m
[32m+[m[32m        // backgroundColor: Colors.transparent,[m
[32m+[m[32m        // elevation: 0,[m
[32m+[m[32m        // iconTheme: IconThemeData(color: Colors.black),[m
[32m+[m[32m        // title: Text([m
[32m+[m[32m        //   '$_city',[m
[32m+[m[32m        //   style: TextStyle([m
[32m+[m[32m        //     fontSize: 28,[m
[32m+[m[32m        //     color: Colors.black,[m
[32m+[m[32m        //     decoration: TextDecoration.underline,[m
[32m+[m[32m        //   ),[m
[32m+[m[32m        // ),[m
       ),[m
       body: new Container([m
           child: SafeArea([m
[36m@@ -111,21 +82,12 @@[m [mclass _FoodScreen extends State<FoodScreen> {[m
                 bottomRight: const Radius.circular(40.0),[m
               ),[m
             ),[m
[31m-            child: Container([m
[31m-              child: ConstrainedBox([m
[31m-                constraints: BoxConstraints([m
[31m-                  minWidth: 300.0,[m
[31m-                  maxWidth: 300.0,[m
[31m-                  minHeight: 150.0,[m
[31m-                  maxHeight: 150.0,[m
[31m-                ),[m
[31m-                child: Center([m
[31m-                  child: AutoSizeText([m
[31m-                    '$_text',[m
[31m-                    textAlign: TextAlign.center,[m
[31m-                    style: TextStyle(fontSize: 20.0),[m
[31m-                  ),[m
[31m-                ),[m
[32m+[m[32m            child: FittedBox([m
[32m+[m[32m              fit: BoxFit.scaleDown,[m
[32m+[m[32m              child: Text([m
[32m+[m[32m                '$_text',[m
[32m+[m[32m                textAlign: TextAlign.center,[m
[32m+[m[32m                style: TextStyle(fontSize: 32),[m
               ),[m
             ),[m
           ),[m
[36m@@ -154,7 +116,7 @@[m [mclass _FoodScreen extends State<FoodScreen> {[m
               //info[m
               Container([m
                 width: MediaQuery.of(context).size.width,[m
[31m-                height: 520,[m
[32m+[m[32m                height: 600,[m
                 decoration: new BoxDecoration([m
                   borderRadius: new BorderRadius.only([m
                     topLeft: const Radius.circular(40.0),[m
[36m@@ -166,7 +128,7 @@[m [mclass _FoodScreen extends State<FoodScreen> {[m
                 child: new Swiper([m
                   layout: SwiperLayout.CUSTOM,[m
                   customLayoutOption: new CustomLayoutOption([m
[31m-                          startIndex: -1, stateCount: 3)[m
[32m+[m[32m                          startIndex: -1, stateCount: _foods.length)[m
                       .addRotate([-45.0 / 180, 0.0, 45.0 / 180]).addTranslate([[m
                     new Offset(-370.0, -40.0),[m
                     new Offset(0.0, 0.0),[m
[36m@@ -191,13 +153,9 @@[m [mclass _FoodScreen extends State<FoodScreen> {[m
                               fontWeight: FontWeight.bold,[m
                             ),[m
                           ),[m
[31m-                          ClipOval([m
[31m-                            child: Image.network([m
[31m-                              _foods[index].foodImg,[m
[31m-                              height: 300,[m
[31m-                              width: 300,[m
[31m-                              fit: BoxFit.cover,[m
[31m-                            ),[m
[32m+[m[32m                          Image.asset([m
[32m+[m[32m                            'assets/images/' + _foods[index].foodImg,[m
[32m+[m[32m                            fit: BoxFit.fill,[m
                           ),[m
                           Text([m
                             _foods[index].foodPrice,[m
[1mdiff --git a/lib/view/screens/history.dart b/lib/view/screens/history.dart[m
[1mindex 3de246e..8b1b7b1 100644[m
[1m--- a/lib/view/screens/history.dart[m
[1m+++ b/lib/view/screens/history.dart[m
[36m@@ -3,91 +3,49 @@[m [mimport 'dart:convert';[m
 import 'package:flutter/material.dart';[m
 import 'package:flutter/services.dart';[m
 import 'package:vn_notitia/logic/models/HistoryVid.dart';[m
[31m-import 'package:vn_notitia/view/screens/city.dart';[m
 import 'package:youtube_player_flutter/youtube_player_flutter.dart';[m
 import 'package:vn_notitia/view/utils/navigation_bar.dart';[m
[31m-import 'package:firebase_database/firebase_database.dart';[m
 [m
 class HistoryScreen extends StatefulWidget {[m
   final String city;[m
   final int cityIndex;[m
 [m
[31m-  const HistoryScreen({Key key, @required this.city, @required this.cityIndex})[m
[31m-      : super(key: key);[m
[32m+[m[32m  const HistoryScreen({Key key, @required this.city, @required this.cityIndex }) : super(key: key);[m
 [m
   @override[m
   _HistoryScreen createState() => _HistoryScreen();[m
 }[m
 [m
 class _HistoryScreen extends State<HistoryScreen> {[m
[32m+[m[32m  String _city = "H√† N·ªôi";[m
   List<HistoryVid> _videos = [];[m
[31m-  Future<String> _data;[m
[32m+[m
[32m+[m[32m  Future<void> readJson() async {[m
[32m+[m[32m    final String response =[m
[32m+[m[32m        await rootBundle.loadString('assets/data/history.json');[m
[32m+[m[32m    final data = await json.decode(response);[m
[32m+[m[32m    setState(() {[m
[32m+[m[32m      List _temp = data["history_videos"];[m
[32m+[m[32m      for (int i = 0; i < _temp.length; i++)[m
[32m+[m[32m        _videos.add(HistoryVid.fromJson(_temp[i]));[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
 [m
   @override[m
   void initState() {[m
     super.initState();[m
[31m-    _data = loadData();[m
[32m+[m[32m    readJson();[m
   }[m
 [m
   @override[m
   Widget build(BuildContext context) {[m
[31m-    SystemChrome.setEnabledSystemUIOverlays([]);[m
[31m-    return FutureBuilder<String>([m
[31m-        future: _data,[m
[31m-        builder: (BuildContext context, AsyncSnapshot snapshot) {[m
[31m-          switch (snapshot.connectionState) {[m
[31m-            case ConnectionState.waiting:[m
[31m-              return Center(child: CircularProgressIndicator());[m
[31m-            case ConnectionState.none:[m
[31m-              return Center(child: Text('Can not connect'));[m
[31m-            case ConnectionState.done:[m
[31m-              return buildHistoryScreen();[m
[31m-            default:[m
[31m-              return null;[m
[31m-          }[m
[31m-        });[m
[31m-  }[m
[31m-[m
[31m-  Future<String> loadData() async {[m
[31m-    await FirebaseDatabase.instance[m
[31m-        .reference()[m
[31m-        .child('${widget.cityIndex}/History')[m
[31m-        .once()[m
[31m-        .then((DataSnapshot snapshot) {[m
[31m-      if (snapshot.value == null) return;[m
[31m-      Map<String, dynamic> result =[m
[31m-          Map<String, dynamic>.from(snapshot.value as Map<dynamic, dynamic>);[m
[31m-      result.forEach((key, values) {[m
[31m-        _videos.add(HistoryVid.fromJson(values));[m
[31m-      });[m
[31m-    });[m
[31m-    return Future.value("Data load successfully");[m
[31m-  }[m
[31m-[m
[31m-  Widget buildHistoryScreen() {[m
     return new Scaffold([m
[32m+[m[32m      backgroundColor: Colors.black,[m
       appBar: AppBar([m
         centerTitle: true,[m
[31m-        title: Row([m
[31m-          mainAxisAlignment: MainAxisAlignment.center,[m
[31m-          children: [[m
[31m-            Container([m
[31m-              margin: EdgeInsets.only(left: 40),[m
[31m-              child: Text(widget.city),[m
[31m-            ),[m
[31m-            IconButton([m
[31m-              icon: Icon(Icons.arrow_drop_down),[m
[31m-              color: Colors.white,[m
[31m-              onPressed: () {[m
[31m-                Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-                    builder: (context) => ChooseCityScreen()));[m
[31m-              },[m
[31m-            ),[m
[31m-          ],[m
[31m-        ),[m
[32m+[m[32m        title: Text(widget.city),[m
       ),[m
[31m-      bottomNavigationBar:[m
[31m-          BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[32m+[m[32m      bottomNavigationBar: BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
       body: Column([m
         children: [[m
           Flexible([m
[36m@@ -97,21 +55,16 @@[m [mclass _HistoryScreen extends State<HistoryScreen> {[m
                 itemCount: _videos.length,[m
                 itemBuilder: (context, index) {[m
                   return Container([m
[31m-                    margin: EdgeInsets.fromLTRB(0, 10, 0, 10),[m
[31m-                    padding: new EdgeInsets.all(10.0),[m
[31m-                    decoration: BoxDecoration([m
[31m-                      color: Color(0xff099ddff),[m
[31m-                      borderRadius: new BorderRadius.circular(10),[m
[31m-                    ),[m
[32m+[m[32m                    margin: EdgeInsets.all(8),[m
                     child: Column([m
                       children: <Widget>[[m
                         Row([m
                           children: [[m
[31m-                            CircleAvatar([m
[31m-                              backgroundColor: Colors.transparent,[m
[31m-                              radius: 20,[m
[31m-                              backgroundImage: NetworkImage([m
[31m-                                _videos[index].avatar,[m
[32m+[m[32m                            SizedBox([m
[32m+[m[32m                              width: 50,[m
[32m+[m[32m                              child: Image.asset([m
[32m+[m[32m                                'assets/images/' + _videos[index].avatar,[m
[32m+[m[32m                                fit: BoxFit.fill,[m
                               ),[m
                             ),[m
                             Padding([m
[36m@@ -119,6 +72,7 @@[m [mclass _HistoryScreen extends State<HistoryScreen> {[m
                               child: Text([m
                                 _videos[index].userName,[m
                                 style: TextStyle([m
[32m+[m[32m                                  color: Colors.white,[m
                                   fontSize: 22,[m
                                 ),[m
                                 textAlign: TextAlign.left,[m
[36m@@ -127,7 +81,7 @@[m [mclass _HistoryScreen extends State<HistoryScreen> {[m
                           ],[m
                         ),[m
                         Container([m
[31m-                          margin: EdgeInsets.fromLTRB(0, 10, 0, 20),[m
[32m+[m[32m                          margin: EdgeInsets.fromLTRB(0, 20, 0, 20),[m
                           child: YoutubePlayer([m
                             controller: YoutubePlayerController([m
                               initialVideoId: YoutubePlayer.convertUrlToId([m
[36m@@ -145,6 +99,7 @@[m [mclass _HistoryScreen extends State<HistoryScreen> {[m
                         Text([m
                           _videos[index].videoTitle,[m
                           style: TextStyle([m
[32m+[m[32m                            color: Colors.white,[m
                             fontSize: 16,[m
                           ),[m
                         ),[m
[36m@@ -155,7 +110,8 @@[m [mclass _HistoryScreen extends State<HistoryScreen> {[m
                 separatorBuilder: (context, index) {[m
                   return Divider([m
                     height: 10,[m
[31m-                    thickness: 2,[m
[32m+[m[32m                    thickness: 3,[m
[32m+[m[32m                    color: Colors.white54,[m
                   );[m
                 },[m
               ),[m
[1mdiff --git a/lib/view/screens/loading.dart b/lib/view/screens/loading.dart[m
[1mindex 7fb7c90..c1f3f15 100644[m
[1m--- a/lib/view/screens/loading.dart[m
[1m+++ b/lib/view/screens/loading.dart[m
[36m@@ -5,6 +5,7 @@[m [mimport 'package:flutter/material.dart';[m
 import 'package:flutter/animation.dart';[m
 [m
 import 'package:vn_notitia/view/screens/city.dart';[m
[32m+[m[32mimport 'package:vn_notitia/view/screens/mainscreen.dart';[m
 [m
 class LoadingScreen extends StatefulWidget {[m
   const LoadingScreen({Key key}) : super(key: key);[m
[1mdiff --git a/lib/view/screens/mainscreen.dart b/lib/view/screens/mainscreen.dart[m
[1mindex 01d8bb0..b865a3d 100644[m
[1m--- a/lib/view/screens/mainscreen.dart[m
[1m+++ b/lib/view/screens/mainscreen.dart[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport 'dart:developer';[m
[32m+[m
 import 'package:flutter/cupertino.dart';[m
 import 'package:flutter/material.dart';[m
 import 'package:flutter/widgets.dart';[m
[36m@@ -12,7 +14,7 @@[m [mimport '../utils/navigation_bar.dart';[m
 import 'package:firebase_database/firebase_database.dart';[m
 import 'package:vn_notitia/view/utils/navigation_bar.dart';[m
 [m
[31m-class MainScreen extends StatefulWidget {[m
[32m+[m[32mclass MainScreen extends StatefulWidget{[m
   final String city;[m
   final int cityIndex;[m
 [m
[36m@@ -22,7 +24,7 @@[m [mclass MainScreen extends StatefulWidget {[m
   _MainScreenState createState() => _MainScreenState();[m
 }[m
 [m
[31m-class _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
[32m+[m[32mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin  {[m
   Information infor;[m
   AnimationController animationController;[m
 [m
[36m@@ -39,19 +41,20 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
   @override[m
   Widget build(BuildContext context) {[m
     BottomNavigation.currentTabIndex = 2;[m
[31m-    return FutureBuilder<String>([m
[31m-        future: loadData(),[m
[31m-        builder: (BuildContext context, AsyncSnapshot snapshot) {[m
[31m-          if (snapshot.connectionState == ConnectionState.waiting) {[m
[31m-            animationController.forward();[m
[31m-            return buildWaitingScreen();[m
[31m-          } else {[m
[31m-            if (snapshot.hasError)[m
[31m-              return Center(child: Text('Error: ${snapshot.error}'));[m
[31m-            else[m
[31m-              return buildMainScreen();[m
[31m-          }[m
[31m-        });[m
[32m+[m[32m    return FutureBuilder<String> ([m
[32m+[m[32m      future: loadData(),[m
[32m+[m[32m      builder: (BuildContext context, AsyncSnapshot snapshot) {[m
[32m+[m[32m        if( snapshot.connectionState == ConnectionState.waiting){[m
[32m+[m[32m          animationController.forward();[m
[32m+[m[32m          return buildWaitingScreen();[m
[32m+[m[32m        } else {[m
[32m+[m[32m          if (snapshot.hasError)[m
[32m+[m[32m            return Center(child: Text('Error: ${snapshot.error}'));[m
[32m+[m[32m          else[m
[32m+[m[32m            return buildMainScreen();[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    );[m
   }[m
 [m
   @override[m
[36m@@ -63,7 +66,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
   Future<String> loadData() async {[m
     await FirebaseDatabase.instance[m
         .reference()[m
[31m-        .child('${widget.cityIndex}')[m
[32m+[m[32m        .child('0')[m
         .once()[m
         .then((DataSnapshot snapshot) {[m
       infor = Information.fromDb(snapshot);[m
[36m@@ -75,27 +78,18 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
     return Scaffold([m
       backgroundColor: Color.fromRGBO(247, 255, 247, 1),[m
       appBar: AppBar([m
[32m+[m[32m        title: Text(widget.city),[m
         centerTitle: true,[m
[31m-        title: Row([m
[31m-          mainAxisAlignment: MainAxisAlignment.center,[m
[31m-          children: [[m
[31m-            Container([m
[31m-              margin: EdgeInsets.only(left: 40),[m
[31m-              child: Text(widget.city),[m
[31m-            ),[m
[31m-            IconButton([m
[31m-              icon: Icon(Icons.arrow_drop_down),[m
[31m-              color: Colors.white,[m
[31m-              onPressed: () {[m
[31m-                Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-                    builder: (context) => ChooseCityScreen()));[m
[31m-              },[m
[31m-            ),[m
[31m-          ],[m
[32m+[m[32m        leading: IconButton([m
[32m+[m[32m          icon: Icon(Icons.arrow_back),[m
[32m+[m[32m          color: Colors.white,[m
[32m+[m[32m          onPressed: () {[m
[32m+[m[32m            Navigator.of(context).push([m
[32m+[m[32m                MaterialPageRoute(builder: (context) => ChooseCityScreen()));[m
[32m+[m[32m          },[m
         ),[m
       ),[m
[31m-      bottomNavigationBar:[m
[31m-          BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[32m+[m[32m      bottomNavigationBar: BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
       body: ListView([m
         children: <Widget>[[m
           Container([m
[36m@@ -118,7 +112,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
             mainAxisAlignment: MainAxisAlignment.spaceAround,[m
             children: [[m
               IconButton([m
[31m-                padding: EdgeInsets.all(20),[m
[32m+[m[32m                padding: EdgeInsets.all(25),[m
                 onPressed: () {[m
                   Navigator.push([m
                     context,[m
[36m@@ -138,7 +132,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
               ),[m
               Spacer(),[m
               IconButton([m
[31m-                padding: EdgeInsets.all(20),[m
[32m+[m[32m                padding: EdgeInsets.all(10),[m
                 onPressed: () {[m
                   BottomNavigation.currentTabIndex = 0;[m
                   Navigator.pushReplacement([m
[36m@@ -159,7 +153,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
               ),[m
               Spacer(),[m
               IconButton([m
[31m-                padding: EdgeInsets.all(20),[m
[32m+[m[32m                padding: EdgeInsets.all(10),[m
                 onPressed: () {[m
                   BottomNavigation.currentTabIndex = 1;[m
                   Navigator.pushReplacement([m
[36m@@ -185,7 +179,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
             mainAxisAlignment: MainAxisAlignment.spaceAround,[m
             children: <Widget>[[m
               IconButton([m
[31m-                  padding: EdgeInsets.all(20),[m
[32m+[m[32m                  padding: EdgeInsets.all(25),[m
                   onPressed: () {[m
                     BottomNavigation.currentTabIndex = 3;[m
                     Navigator.pushReplacement([m
[36m@@ -205,7 +199,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
               ),[m
               Spacer(),[m
               IconButton([m
[31m-                padding: EdgeInsets.all(20),[m
[32m+[m[32m                // padding: EdgeInsets.all(10) ,[m
                 onPressed: () {[m
                   BottomNavigation.currentTabIndex = 4;[m
                   Navigator.pushReplacement([m
[36m@@ -226,7 +220,7 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
               ),[m
               Spacer(),[m
               IconButton([m
[31m-                padding: EdgeInsets.all(20),[m
[32m+[m[32m                // padding: EdgeInsets.all(10) ,[m
                 onPressed: () {},[m
                 icon: Image.asset("assets/images/game.png"),[m
                 iconSize: 70,[m
[36m@@ -321,7 +315,6 @@[m [mclass _MainScreenState extends State<MainScreen> with TickerProviderStateMixin {[m
       ),[m
     );[m
   }[m
[31m-[m
   Widget buildWaitingScreen() {[m
     return Scaffold([m
       backgroundColor: Color.fromRGBO(247, 255, 247, 1),[m
[1mdiff --git a/lib/view/screens/news.dart b/lib/view/screens/news.dart[m
[1mindex c4c1394..188da36 100644[m
[1m--- a/lib/view/screens/news.dart[m
[1m+++ b/lib/view/screens/news.dart[m
[36m@@ -1,6 +1,5 @@[m
 // @dart=2.9[m
 import 'package:flutter/material.dart';[m
[31m-import 'package:vn_notitia/view/screens/city.dart';[m
 import '../utils/navigation_bar.dart';[m
 import '../../logic/models/News.dart';[m
 import 'package:url_launcher/url_launcher.dart';[m
[36m@@ -118,23 +117,7 @@[m [mclass _NewsScreen extends State<NewsScreen> {[m
     return Scaffold([m
         appBar: AppBar([m
           centerTitle: true,[m
[31m-          title: Row([m
[31m-            mainAxisAlignment: MainAxisAlignment.center,[m
[31m-            children: [[m
[31m-              Container([m
[31m-                margin: EdgeInsets.only(left: 40),[m
[31m-                child: Text(widget.city),[m
[31m-              ),[m
[31m-              IconButton([m
[31m-                icon: Icon(Icons.arrow_drop_down),[m
[31m-                color: Colors.white,[m
[31m-                onPressed: () {[m
[31m-                  Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-                      builder: (context) => ChooseCityScreen()));[m
[31m-                },[m
[31m-              ),[m
[31m-            ],[m
[31m-          ),[m
[32m+[m[32m          title: Text(widget.city),[m
         ),[m
         bottomNavigationBar:[m
             BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[1mdiff --git a/lib/view/screens/travel.dart b/lib/view/screens/travel.dart[m
[1mindex f841742..ae6f14a 100644[m
[1m--- a/lib/view/screens/travel.dart[m
[1m+++ b/lib/view/screens/travel.dart[m
[36m@@ -1,13 +1,11 @@[m
 import 'package:flutter/material.dart';[m
[31m-import 'package:vn_notitia/view/screens/city.dart';[m
 import '../utils/navigation_bar.dart';[m
 [m
 class TravelScreen extends StatefulWidget {[m
   final String city;[m
   final int cityIndex;[m
 [m
[31m-  const TravelScreen({Key key, @required this.city, @required this.cityIndex})[m
[31m-      : super(key: key);[m
[32m+[m[32m  const TravelScreen({Key key, @required this.city, @required this.cityIndex }) : super(key: key);[m
 [m
   @override[m
   _TravelScreen createState() => _TravelScreen();[m
[36m@@ -18,27 +16,10 @@[m [mclass _TravelScreen extends State<TravelScreen> {[m
   Widget build(BuildContext context) {[m
     return Scaffold([m
       appBar: AppBar([m
[32m+[m[32m        title: Text(widget.city),[m
         centerTitle: true,[m
[31m-        title: Row([m
[31m-          mainAxisAlignment: MainAxisAlignment.center,[m
[31m-          children: [[m
[31m-            Container([m
[31m-              margin: EdgeInsets.only(left: 40),[m
[31m-              child: Text(widget.city),[m
[31m-            ),[m
[31m-            IconButton([m
[31m-              icon: Icon(Icons.arrow_drop_down),[m
[31m-              color: Colors.white,[m
[31m-              onPressed: () {[m
[31m-                Navigator.of(context).pushReplacement(MaterialPageRoute([m
[31m-                    builder: (context) => ChooseCityScreen()));[m
[31m-              },[m
[31m-            ),[m
[31m-          ],[m
[31m-        ),[m
       ),[m
[31m-      bottomNavigationBar:[m
[31m-          BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
[32m+[m[32m      bottomNavigationBar: BottomNavigation(city: widget.city, cityIndex: widget.cityIndex),[m
       body: Container([m
         child: Column([m
           children: [[m
[1mdiff --git a/pubspec.lock b/pubspec.lock[m
[1mindex a5a397d..936dfbc 100644[m
[1m--- a/pubspec.lock[m
[1m+++ b/pubspec.lock[m
[36m@@ -7,14 +7,7 @@[m [mpackages:[m
       name: async[m
       url: "https://pub.dartlang.org"[m
     source: hosted[m
[31m-    version: "2.6.1"[m
[31m-  auto_size_text:[m
[31m-    dependency: "direct main"[m
[31m-    description:[m
[31m-      name: auto_size_text[m
[31m-      url: "https://pub.dartlang.org"[m
[31m-    source: hosted[m
[31m-    version: "2.1.0"[m
[32m+[m[32m    version: "2.5.0"[m
   boolean_selector:[m
     dependency: transitive[m
     description:[m
[36m@@ -300,7 +293,7 @@[m [mpackages:[m
       name: source_span[m
       url: "https://pub.dartlang.org"[m
     source: hosted[m
[31m-    version: "1.8.1"[m
[32m+[m[32m    version: "1.8.0"[m
   stack_trace:[m
     dependency: transitive[m
     description:[m
[36m@@ -335,7 +328,7 @@[m [mpackages:[m
       name: test_api[m
       url: "https://pub.dartlang.org"[m
     source: hosted[m
[31m-    version: "0.3.0"[m
[32m+[m[32m    version: "0.2.19"[m
   transformer_page_view:[m
     dependency: transitive[m
     description:[m
[1mdiff --git a/pubspec.yaml b/pubspec.yaml[m
[1mindex 8c2a4e4..6629e18 100644[m
[1m--- a/pubspec.yaml[m
[1m+++ b/pubspec.yaml[m
[36m@@ -25,7 +25,7 @@[m [mdependencies:[m
   convex_bottom_bar: ^3.0.0[m
   google_fonts: ^2.1.0[m
   youtube_player_flutter: ^8.0.0 [m
[31m-  auto_size_text: ^2.1.0[m
[32m+[m[32m  # auto_size_text: ^2.1.0[m
   # animated_text_kit: ^4.2.1[m
   flutter:[m
     sdk: flutter[m
